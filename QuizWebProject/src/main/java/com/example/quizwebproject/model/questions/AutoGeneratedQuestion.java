package com.example.quizwebproject.model.questions;

import jakarta.persistence.Entity;
import jakarta.persistence.Lob;

import java.util.List;
import java.util.Random;

@Entity
public class AutoGeneratedQuestion extends Question {

    private int operand1;
    private int operand2;
    private char operator;

    public AutoGeneratedQuestion() {
        generateQuestion();
        setCategory("AutoGenerated");
    }

    @Override
    public String getQuestionType() { return "AutoGeneratedQuestion"; }

    public AutoGeneratedQuestion(int min, int max) {
        generateQuestion(min, max);
        setCategory("AutoGenerated");

    }

    private void generateQuestion() {
        generateQuestion(1, 10);
    }

    private void generateQuestion(int min, int max) {
        Random rand = new Random();
        this.operand1 = rand.nextInt(max - min + 1) + min;
        this.operand2 = rand.nextInt(max - min + 1) + min;
        char[] ops = {'+', '-', '*'};
        this.operator = ops[rand.nextInt(ops.length)];

        String qText = String.format("What is %d %c %d?", operand1, operator, operand2);
        setRawQuestion(qText);
        setRawCorrectAnswers(String.valueOf(evaluate()));
        setRawUserAnswer("");
    }

    private int evaluate() {
        return switch (operator) {
            case '+' -> operand1 + operand2;
            case '-' -> operand1 - operand2;
            case '*' -> operand1 * operand2;
            default -> 0;
        };
    }

    @Override
    public void setMaxPoints(Double maxPoints) {
        setRawMaxPoints(maxPoints);
    }

    @Override
    public Double getMaxPoints() {
        return getRawMaxPoints();
    }

    @Override
    public String getQuestion() {
        return getRawQuestion();
    }

    @Override
    public void setUserAnswer(String userAnswer) {
        setRawUserAnswer(userAnswer);
    }

    @Override
    public String getUserAnswer() {
        return getRawUserAnswer();
    }

    @Override
    public String getCategory() {
        return getRawCategory();
    }

    @Override
    public void setCategory(String category) {
        setRawCategory(category);
    }

    @Override
    @Lob
    public List<String> getCorrectAnswers() {
        return List.of(getRawCorrectAnswers());
    }

    @Override
    public double getResult() {
        try {
            String user = getRawUserAnswer().trim();
            if (user.endsWith(",")) {
                user = user.substring(0, user.length() - 1);
            }
            String correct = getRawCorrectAnswers().trim();
            if(user.equals(correct)) {
                return 1.0;
            } else {
                return 0.0;
            }
        } catch (Exception e) {
            return 0.0;
        }
    }

    @Override
    public String toString() {
        return "AutoGeneratedQuestion {" +
                "id=" + getId() +
                ", question='" + getQuestion() + '\'' +
                ", correctAnswer='" + getCorrectAnswers() + '\'' +
                ", userAnswer='" + getUserAnswer() + '\'' +
                ", result=" + getResult() +
                ", category='" + getCategory() + '\'' +
                '}';
    }
}
